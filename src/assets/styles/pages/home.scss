@use "../abstracts/vars";
@use "../abstracts/mixins";
@use "sass:color";
@use "sass:list";

.categs-search {
  @include mixins.flex(row, space-between, center);
  gap: vars.$gap * 3;

  .categories {
    display: block;
    width: 80%;
    @include mixins.flex(row, space-between, center);

    @for $i from 1 through list.length(vars.$colors) {
      li:nth-child(#{list.length(vars.$colors)}n + #{$i}) {
        @include mixins.button(
          vars.$bg-color,
          vars.$pr-color,
          list.nth(vars.$colors, $i),
          list.nth(vars.$colors, $i),
          list.nth(vars.$colors, $i),
          vars.$bg-color
        );
        padding: vars.$spacing-xxs vars.$spacing-lg;
        &:nth-child(1) {
          background-color: vars.$sc-color;
          color: vars.$bg-color;
          border-color: vars.$sc-color;
          &:hover {
            background-color: color.adjust(vars.$sc-color, $lightness: -10%);
          }
        }
      }
    }
  }

  .search {
    @include mixins.flex(row, space-between, center);
    gap: vars.$gap;
    .search-input {
      @include mixins.button(vars.$bg-color, vars.$pr-color, vars.$pr-color);
      cursor: text;
      padding-left: 0.5rem;
      font-weight: 200;

      &::placeholder {
        font-family: vars.$body;
        font-weight: 400;
      }
    }
    .search-btn {
      @include mixins.button(vars.$pr-color, vars.$bg-color, vars.$pr-color);

      &:hover {
        background-color: color.adjust(vars.$pr-color, $lightness: 10%);
        background-color: color.adjust(vars.$pr-color, $lightness: 10%);
      }
    }
  }
}
